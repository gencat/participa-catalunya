# frozen_string_literal: true

module Decidim
  module Courses
    # Service that encapsulates all logic related to filtering courses.
    class CourseSearch < ParticipatorySpaceSearch
      def initialize(options = {})
        super(Course.all, options)
      end

      # We need to return the scope generated by the base_query method in the parent
      # class because it doesn't return it, only generates it. We need to do a PR on Decidim?
      def base_query
        super

        @scope
      end

      def search_modality
        return query if modality.blank?

        query.where(modality: modality)
      end
    end
  end
end
